(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{374:function(t,s,a){"use strict";a.r(s);var l=a(7),r=Object(l.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_1-类内-与-类外"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-类内-与-类外"}},[t._v("#")]),t._v(" 1. 类内 与 类外")]),t._v(" "),s("ol",[s("li",[t._v("类声明之内称为类内")]),t._v(" "),s("li",[t._v("类声明之外称为类外\nC++通过设置访问控制属性，即(public 等)来实现能否被类外访问，将类内数据隐藏的过程即封装\n对类的有效封装一般是既有部分封装，又保留部分外部接口")])]),t._v(" "),s("h3",{attrs:{id:"_2-访问控制属性说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-访问控制属性说明"}},[t._v("#")]),t._v(" 2. 访问控制属性说明")]),t._v(" "),s("ol",[s("li",[t._v("控制访问属性可从类内任意顺序出现")]),t._v(" "),s("li",[t._v("修饰访问属性的关键字可多次出现")]),t._v(" "),s("li",[t._v("一个成员只能有一种访问属性")])])])}),[],!1,null,null,null);s.default=r.exports}}]);